

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Feb 02 03:08:20 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168                           
   169                           	psect	idataBANK0
   170  078C                     __pidataBANK0:
   171                           
   172                           ;initializer for _yarim_adim
   173  078C  340E               	retlw	14
   174  078D  3400               	retlw	0
   175  078E  340C               	retlw	12
   176  078F  3400               	retlw	0
   177  0790  340D               	retlw	13
   178  0791  3400               	retlw	0
   179  0792  3409               	retlw	9
   180  0793  3400               	retlw	0
   181  0794  340B               	retlw	11
   182  0795  3400               	retlw	0
   183  0796  3403               	retlw	3
   184  0797  3400               	retlw	0
   185  0798  3407               	retlw	7
   186  0799  3400               	retlw	0
   187  079A  3406               	retlw	6
   188  079B  3400               	retlw	0
   189  0006                     _PORTB	set	6
   190  0086                     _TRISB	set	134
   191                           
   192                           	psect	cinit
   193  07EC                     start_initialization:	
   194                           ; #config settings
   195                           
   196  07EC                     __initialization:
   197                           
   198                           ; Initialize objects allocated to BANK0
   199  07EC  1383               	bcf	3,7	;select IRP bank0
   200  07ED  3030               	movlw	low (__pdataBANK0+16)
   201  07EE  00FD               	movwf	btemp+-1
   202  07EF  3007               	movlw	high __pidataBANK0
   203  07F0  00FE               	movwf	btemp
   204  07F1  308C               	movlw	low __pidataBANK0
   205  07F2  00FF               	movwf	btemp+1
   206  07F3  3020               	movlw	low __pdataBANK0
   207  07F4  0084               	movwf	4
   208  07F5  120A  118A  27A0  120A  118A  	fcall	init_ram0
   209                           
   210                           ; Clear objects allocated to COMMON
   211  07FA  01F3               	clrf	__pbssCOMMON& (0+127)
   212  07FB  01F4               	clrf	(__pbssCOMMON+1)& (0+127)
   213  07FC                     end_of_initialization:	
   214                           ;End of C runtime variable initialization code
   215                           
   216  07FC                     __end_of__initialization:
   217  07FC  0183               	clrf	3
   218  07FD  120A  118A  2FAF   	ljmp	_main	;jump to C main() function
   219                           
   220                           	psect	bssCOMMON
   221  0073                     __pbssCOMMON:
   222  0073                     _i:
   223  0073                     	ds	2
   224                           
   225                           	psect	dataBANK0
   226  0020                     __pdataBANK0:
   227  0020                     _yarim_adim:
   228  0020                     	ds	16
   229                           
   230                           	psect	inittext
   231  079C                     init_fetch0:	
   232                           ;	Called with low address in FSR and high address in W
   233                           
   234  079C  087E               	movf	btemp,w
   235  079D  008A               	movwf	10
   236  079E  087F               	movf	btemp+1,w
   237  079F  0082               	movwf	2
   238  07A0                     init_ram0:	
   239                           ;Called with:
   240                           ;	high address of idata address in btemp 
   241                           ;	low address of idata address in btemp+1 
   242                           ;	low address of data in FSR
   243                           ;	high address + 1 of data in btemp-1
   244                           
   245  07A0  120A  118A  279C  120A  118A  	fcall	init_fetch0
   246  07A5  0080               	movwf	0
   247  07A6  0A84               	incf	4,f
   248  07A7  0804               	movf	4,w
   249  07A8  067D               	xorwf	btemp+-1,w
   250  07A9  1903               	btfsc	3,2
   251  07AA  3400               	retlw	0
   252  07AB  0AFF               	incf	btemp+1,f
   253  07AC  1903               	btfsc	3,2
   254  07AD  0AFE               	incf	btemp,f
   255  07AE  2FA0               	goto	init_ram0
   256                           
   257                           	psect	cstackCOMMON
   258  0070                     __pcstackCOMMON:
   259  0070                     ?_main:
   260  0070                     ??_main:	
   261                           ; 1 bytes @ 0x0
   262                           
   263                           
   264                           ; 1 bytes @ 0x0
   265  0070                     	ds	3
   266                           
   267                           	psect	maintext
   268  07AF                     __pmaintext:	
   269 ;;
   270 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   271 ;;
   272 ;; *************** function _main *****************
   273 ;; Defined at:
   274 ;;		line 16 in file "U-Step-Motor.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;		None
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1    wreg      void 
   281 ;; Registers used:
   282 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   283 ;; Tracked objects:
   284 ;;		On entry : B00/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   288 ;;      Params:         0       0       0       0       0
   289 ;;      Locals:         0       0       0       0       0
   290 ;;      Temps:          3       0       0       0       0
   291 ;;      Totals:         3       0       0       0       0
   292 ;;Total ram usage:        3 bytes
   293 ;; This function calls:
   294 ;;		Nothing
   295 ;; This function is called by:
   296 ;;		Startup code after reset
   297 ;; This function uses a non-reentrant model
   298 ;;
   299                           
   300                           
   301                           ;psect for function _main
   302  07AF                     _main:
   303  07AF                     l611:	
   304                           ;incstack = 0
   305                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   306                           
   307                           
   308                           ;U-Step-Motor.c: 18:     TRISB=0x00;
   309  07AF  1683               	bsf	3,5	;RP0=1, select bank1
   310  07B0  1303               	bcf	3,6	;RP1=0, select bank1
   311  07B1  0186               	clrf	6	;volatile
   312                           
   313                           ;U-Step-Motor.c: 19:     PORTB = 0x00;
   314  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   315  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   316  07B4  0186               	clrf	6	;volatile
   317  07B5                     l613:
   318                           
   319                           ;U-Step-Motor.c: 23:          PORTB = yarim_adim[i];
   320  07B5  0873               	movf	_i,w
   321  07B6  00F0               	movwf	??_main
   322  07B7  0770               	addwf	??_main,w
   323  07B8  3E20               	addlw	(low (_yarim_adim| 0))& (0+255)
   324  07B9  0084               	movwf	4
   325  07BA  1383               	bcf	3,7	;select IRP bank0
   326  07BB  0800               	movf	0,w
   327  07BC  1283               	bcf	3,5	;RP0=0, select bank0
   328  07BD  1303               	bcf	3,6	;RP1=0, select bank0
   329  07BE  0086               	movwf	6	;volatile
   330  07BF                     l615:
   331                           
   332                           ;U-Step-Motor.c: 24:         _delay((unsigned long)((1500)*(4000000/4000.0)));
   333  07BF  3008               	movlw	8
   334  07C0  00F2               	movwf	??_main+2
   335  07C1  309D               	movlw	157
   336  07C2  00F1               	movwf	??_main+1
   337  07C3  3005               	movlw	5
   338  07C4  00F0               	movwf	??_main
   339  07C5                     u27:
   340  07C5  0BF0               	decfsz	??_main,f
   341  07C6  2FC5               	goto	u27
   342  07C7  0BF1               	decfsz	??_main+1,f
   343  07C8  2FC5               	goto	u27
   344  07C9  0BF2               	decfsz	??_main+2,f
   345  07CA  2FC5               	goto	u27
   346  07CB  2FCC               	nop2
   347  07CC                     l617:
   348                           
   349                           ;U-Step-Motor.c: 25:         i++;
   350  07CC  3001               	movlw	1
   351  07CD  07F3               	addwf	_i,f
   352  07CE  1803               	skipnc
   353  07CF  0AF4               	incf	_i+1,f
   354  07D0  3000               	movlw	0
   355  07D1  07F4               	addwf	_i+1,f
   356  07D2                     l619:
   357                           
   358                           ;U-Step-Motor.c: 27:         if(i == 8){
   359  07D2  3008               	movlw	8
   360  07D3  0673               	xorwf	_i,w
   361  07D4  0474               	iorwf	_i+1,w
   362  07D5  1D03               	btfss	3,2
   363  07D6  2FD8               	goto	u11
   364  07D7  2FD9               	goto	u10
   365  07D8                     u11:
   366  07D8  2FB5               	goto	l613
   367  07D9                     u10:
   368  07D9                     l621:
   369                           
   370                           ;U-Step-Motor.c: 28:             i = 0;
   371  07D9  01F3               	clrf	_i
   372  07DA  01F4               	clrf	_i+1
   373  07DB                     l623:
   374                           
   375                           ;U-Step-Motor.c: 29:             _delay((unsigned long)((1500)*(4000000/4000.0)));
   376  07DB  3008               	movlw	8
   377  07DC  00F2               	movwf	??_main+2
   378  07DD  309D               	movlw	157
   379  07DE  00F1               	movwf	??_main+1
   380  07DF  3005               	movlw	5
   381  07E0  00F0               	movwf	??_main
   382  07E1                     u37:
   383  07E1  0BF0               	decfsz	??_main,f
   384  07E2  2FE1               	goto	u37
   385  07E3  0BF1               	decfsz	??_main+1,f
   386  07E4  2FE1               	goto	u37
   387  07E5  0BF2               	decfsz	??_main+2,f
   388  07E6  2FE1               	goto	u37
   389  07E7  2FE8               	nop2
   390  07E8  2FB5               	goto	l613
   391  07E9  120A  118A  2800   	ljmp	start
   392  07EC                     __end_of_main:
   393  007E                     btemp	set	126	;btemp
   394  007E                     wtemp0	set	126
   395                           
   396                           	psect	config
   397                           
   398                           ;Config register CONFIG @ 0x2007
   399                           ;	Oscillator Selection bits
   400                           ;	FOSC = XT, XT oscillator
   401                           ;	Watchdog Timer Enable bit
   402                           ;	WDTE = OFF, WDT disabled
   403                           ;	Power-up Timer Enable bit
   404                           ;	PWRTE = OFF, PWRT disabled
   405                           ;	Brown-out Reset Enable bit
   406                           ;	BOREN = OFF, BOR disabled
   407                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   408                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   409                           ;	Data EEPROM Memory Code Protection bit
   410                           ;	CPD = OFF, Data EEPROM code protection off
   411                           ;	Flash Program Memory Write Enable bits
   412                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   413                           ;	In-Circuit Debugger Mode bit
   414                           ;	DEBUG = 0x1, unprogrammed default
   415                           ;	Flash Program Memory Code Protection bit
   416                           ;	CP = OFF, Code protection off
   417  2007                     	org	8199
   418  2007  3F39               	dw	16185

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       5
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       5       1       35.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      15      12        0.0%
ABS                  0      0      15       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Feb 02 03:08:20 2022

                      _i 0073                        pc 0002                       u10 07D9  
                     u11 07D8                       u27 07C5                       u37 07E1  
                     fsr 0004                      l611 07AF                      l621 07D9  
                    l613 07B5                      l623 07DB                      l615 07BF  
                    l617 07CC                      l619 07D2                      fsr0 0004  
                    indf 0000                     _main 07AF                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EC             __end_of_main 07EC  
                 ??_main 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 078C               __pmaintext 07AF     end_of_initialization 07FC  
             _yarim_adim 0020      start_initialization 07EC               init_fetch0 079C  
            __pdataBANK0 0020              __pbssCOMMON 0073                ___latbits 0002  
          __size_of_main 003D                 init_ram0 07A0  
