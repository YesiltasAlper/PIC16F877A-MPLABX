

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Feb 02 03:01:22 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168                           
   169                           	psect	idataBANK0
   170  078F                     __pidataBANK0:
   171                           
   172                           ;initializer for _tam_adim
   173  078F  340E               	retlw	14
   174  0790  3400               	retlw	0
   175  0791  340C               	retlw	12
   176  0792  3400               	retlw	0
   177  0793  340D               	retlw	13
   178  0794  3400               	retlw	0
   179  0795  3409               	retlw	9
   180  0796  3400               	retlw	0
   181  0797  340B               	retlw	11
   182  0798  3400               	retlw	0
   183  0799  3403               	retlw	3
   184  079A  3400               	retlw	0
   185  079B  3407               	retlw	7
   186  079C  3400               	retlw	0
   187  079D  3406               	retlw	6
   188  079E  3400               	retlw	0
   189                           
   190                           ;initializer for _yarim_adim
   191  079F  3401               	retlw	1
   192  07A0  3400               	retlw	0
   193  07A1  3403               	retlw	3
   194  07A2  3400               	retlw	0
   195  07A3  3402               	retlw	2
   196  07A4  3400               	retlw	0
   197  07A5  3406               	retlw	6
   198  07A6  3400               	retlw	0
   199  07A7  3404               	retlw	4
   200  07A8  3400               	retlw	0
   201  07A9  340C               	retlw	12
   202  07AA  3400               	retlw	0
   203  07AB  3408               	retlw	8
   204  07AC  3400               	retlw	0
   205  07AD  3409               	retlw	9
   206  07AE  3400               	retlw	0
   207  0006                     _PORTB	set	6
   208  0086                     _TRISB	set	134
   209                           
   210                           	psect	cinit
   211  07EC                     start_initialization:	
   212                           ; #config settings
   213                           
   214  07EC                     __initialization:
   215                           
   216                           ; Initialize objects allocated to BANK0
   217  07EC  1383               	bcf	3,7	;select IRP bank0
   218  07ED  3040               	movlw	low (__pdataBANK0+32)
   219  07EE  00FD               	movwf	btemp+-1
   220  07EF  3007               	movlw	high __pidataBANK0
   221  07F0  00FE               	movwf	btemp
   222  07F1  308F               	movlw	low __pidataBANK0
   223  07F2  00FF               	movwf	btemp+1
   224  07F3  3020               	movlw	low __pdataBANK0
   225  07F4  0084               	movwf	4
   226  07F5  120A  118A  2780  120A  118A  	fcall	init_ram0
   227                           
   228                           ; Clear objects allocated to COMMON
   229  07FA  01F3               	clrf	__pbssCOMMON& (0+127)
   230  07FB  01F4               	clrf	(__pbssCOMMON+1)& (0+127)
   231  07FC                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234  07FC                     __end_of__initialization:
   235  07FC  0183               	clrf	3
   236  07FD  120A  118A  2FAF   	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	bssCOMMON
   239  0073                     __pbssCOMMON:
   240  0073                     _i:
   241  0073                     	ds	2
   242                           
   243                           	psect	dataBANK0
   244  0020                     __pdataBANK0:
   245  0020                     _tam_adim:
   246  0020                     	ds	16
   247  0030                     _yarim_adim:
   248  0030                     	ds	16
   249                           
   250                           	psect	inittext
   251  077C                     init_fetch0:	
   252                           ;	Called with low address in FSR and high address in W
   253                           
   254  077C  087E               	movf	btemp,w
   255  077D  008A               	movwf	10
   256  077E  087F               	movf	btemp+1,w
   257  077F  0082               	movwf	2
   258  0780                     init_ram0:	
   259                           ;Called with:
   260                           ;	high address of idata address in btemp 
   261                           ;	low address of idata address in btemp+1 
   262                           ;	low address of data in FSR
   263                           ;	high address + 1 of data in btemp-1
   264                           
   265  0780  120A  118A  277C  120A  118A  	fcall	init_fetch0
   266  0785  0080               	movwf	0
   267  0786  0A84               	incf	4,f
   268  0787  0804               	movf	4,w
   269  0788  067D               	xorwf	btemp+-1,w
   270  0789  1903               	btfsc	3,2
   271  078A  3400               	retlw	0
   272  078B  0AFF               	incf	btemp+1,f
   273  078C  1903               	btfsc	3,2
   274  078D  0AFE               	incf	btemp,f
   275  078E  2F80               	goto	init_ram0
   276                           
   277                           	psect	cstackCOMMON
   278  0070                     __pcstackCOMMON:
   279  0070                     ?_main:
   280  0070                     ??_main:	
   281                           ; 1 bytes @ 0x0
   282                           
   283                           
   284                           ; 1 bytes @ 0x0
   285  0070                     	ds	3
   286                           
   287                           	psect	maintext
   288  07AF                     __pmaintext:	
   289 ;;
   290 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   291 ;;
   292 ;; *************** function _main *****************
   293 ;; Defined at:
   294 ;;		line 17 in file "B-Step-Motor.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;		None
   297 ;; Auto vars:     Size  Location     Type
   298 ;;		None
   299 ;; Return value:  Size  Location     Type
   300 ;;                  1    wreg      void 
   301 ;; Registers used:
   302 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   303 ;; Tracked objects:
   304 ;;		On entry : B00/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   308 ;;      Params:         0       0       0       0       0
   309 ;;      Locals:         0       0       0       0       0
   310 ;;      Temps:          3       0       0       0       0
   311 ;;      Totals:         3       0       0       0       0
   312 ;;Total ram usage:        3 bytes
   313 ;; This function calls:
   314 ;;		Nothing
   315 ;; This function is called by:
   316 ;;		Startup code after reset
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320                           
   321                           ;psect for function _main
   322  07AF                     _main:
   323  07AF                     l613:	
   324                           ;incstack = 0
   325                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   326                           
   327                           
   328                           ;B-Step-Motor.c: 19:     TRISB=0x00;
   329  07AF  1683               	bsf	3,5	;RP0=1, select bank1
   330  07B0  1303               	bcf	3,6	;RP1=0, select bank1
   331  07B1  0186               	clrf	6	;volatile
   332                           
   333                           ;B-Step-Motor.c: 20:     PORTB = 0x00;
   334  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   335  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   336  07B4  0186               	clrf	6	;volatile
   337  07B5                     l615:
   338                           
   339                           ;B-Step-Motor.c: 24:          PORTB = yarim_adim[i];
   340  07B5  0873               	movf	_i,w
   341  07B6  00F0               	movwf	??_main
   342  07B7  0770               	addwf	??_main,w
   343  07B8  3E30               	addlw	(low (_yarim_adim| 0))& (0+255)
   344  07B9  0084               	movwf	4
   345  07BA  1383               	bcf	3,7	;select IRP bank0
   346  07BB  0800               	movf	0,w
   347  07BC  1283               	bcf	3,5	;RP0=0, select bank0
   348  07BD  1303               	bcf	3,6	;RP1=0, select bank0
   349  07BE  0086               	movwf	6	;volatile
   350  07BF                     l617:
   351                           
   352                           ;B-Step-Motor.c: 25:         _delay((unsigned long)((1500)*(4000000/4000.0)));
   353  07BF  3008               	movlw	8
   354  07C0  00F2               	movwf	??_main+2
   355  07C1  309D               	movlw	157
   356  07C2  00F1               	movwf	??_main+1
   357  07C3  3005               	movlw	5
   358  07C4  00F0               	movwf	??_main
   359  07C5                     u27:
   360  07C5  0BF0               	decfsz	??_main,f
   361  07C6  2FC5               	goto	u27
   362  07C7  0BF1               	decfsz	??_main+1,f
   363  07C8  2FC5               	goto	u27
   364  07C9  0BF2               	decfsz	??_main+2,f
   365  07CA  2FC5               	goto	u27
   366  07CB  2FCC               	nop2
   367  07CC                     l619:
   368                           
   369                           ;B-Step-Motor.c: 26:         i++;
   370  07CC  3001               	movlw	1
   371  07CD  07F3               	addwf	_i,f
   372  07CE  1803               	skipnc
   373  07CF  0AF4               	incf	_i+1,f
   374  07D0  3000               	movlw	0
   375  07D1  07F4               	addwf	_i+1,f
   376  07D2                     l621:
   377                           
   378                           ;B-Step-Motor.c: 28:         if(i == 8){
   379  07D2  3008               	movlw	8
   380  07D3  0673               	xorwf	_i,w
   381  07D4  0474               	iorwf	_i+1,w
   382  07D5  1D03               	btfss	3,2
   383  07D6  2FD8               	goto	u11
   384  07D7  2FD9               	goto	u10
   385  07D8                     u11:
   386  07D8  2FB5               	goto	l615
   387  07D9                     u10:
   388  07D9                     l623:
   389                           
   390                           ;B-Step-Motor.c: 29:             i = 0;
   391  07D9  01F3               	clrf	_i
   392  07DA  01F4               	clrf	_i+1
   393  07DB                     l625:
   394                           
   395                           ;B-Step-Motor.c: 30:             _delay((unsigned long)((1500)*(4000000/4000.0)));
   396  07DB  3008               	movlw	8
   397  07DC  00F2               	movwf	??_main+2
   398  07DD  309D               	movlw	157
   399  07DE  00F1               	movwf	??_main+1
   400  07DF  3005               	movlw	5
   401  07E0  00F0               	movwf	??_main
   402  07E1                     u37:
   403  07E1  0BF0               	decfsz	??_main,f
   404  07E2  2FE1               	goto	u37
   405  07E3  0BF1               	decfsz	??_main+1,f
   406  07E4  2FE1               	goto	u37
   407  07E5  0BF2               	decfsz	??_main+2,f
   408  07E6  2FE1               	goto	u37
   409  07E7  2FE8               	nop2
   410  07E8  2FB5               	goto	l615
   411  07E9  120A  118A  2800   	ljmp	start
   412  07EC                     __end_of_main:
   413  007E                     btemp	set	126	;btemp
   414  007E                     wtemp0	set	126
   415                           
   416                           	psect	config
   417                           
   418                           ;Config register CONFIG @ 0x2007
   419                           ;	Oscillator Selection bits
   420                           ;	FOSC = XT, XT oscillator
   421                           ;	Watchdog Timer Enable bit
   422                           ;	WDTE = OFF, WDT disabled
   423                           ;	Power-up Timer Enable bit
   424                           ;	PWRTE = OFF, PWRT disabled
   425                           ;	Brown-out Reset Enable bit
   426                           ;	BOREN = OFF, BOR disabled
   427                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   428                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   429                           ;	Data EEPROM Memory Code Protection bit
   430                           ;	CPD = OFF, Data EEPROM code protection off
   431                           ;	Flash Program Memory Write Enable bits
   432                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   433                           ;	In-Circuit Debugger Mode bit
   434                           ;	DEBUG = 0x1, unprogrammed default
   435                           ;	Flash Program Memory Code Protection bit
   436                           ;	CP = OFF, Code protection off
   437  2007                     	org	8199
   438  2007  3F39               	dw	16185

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       5
    BANK0            80      0      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      20       5       40.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       5       1       35.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      25      12        0.0%
ABS                  0      0      25       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Feb 02 03:01:22 2022

                      _i 0073                        pc 0002                       u10 07D9  
                     u11 07D8                       u27 07C5                       u37 07E1  
                     fsr 0004                      l621 07D2                      l613 07AF  
                    l623 07D9                      l615 07B5                      l625 07DB  
                    l617 07BF                      l619 07CC                      fsr0 0004  
                    indf 0000                     _main 07AF                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EC             __end_of_main 07EC  
                 ??_main 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 078F               __pmaintext 07AF     end_of_initialization 07FC  
             _yarim_adim 0030      start_initialization 07EC               init_fetch0 077C  
            __pdataBANK0 0020              __pbssCOMMON 0073                ___latbits 0002  
          __size_of_main 003D                 _tam_adim 0020                 init_ram0 0780  
